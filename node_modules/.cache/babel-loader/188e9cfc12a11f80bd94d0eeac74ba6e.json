{"ast":null,"code":"import p5 from 'p5';\n\nfunction getRandomArbitrary(min, max) {\n  return Math.random() * (max - min) + min;\n}\n\nlet dots = [];\nlet count;\nlet cellSize = 100;\n\nfunction createDot({\n  xCount,\n  yCount,\n  d = Math.floor(getRandomArbitrary(40, 50)),\n  speed = Math.floor(getRandomArbitrary(1, 3))\n}) {\n  let paddingX = cellSize / 2;\n  let paddingY = cellSize / 2;\n  let directionX = 1;\n  let directionY = 1;\n  return {\n    move() {\n      paddingX = paddingX + speed * directionX;\n\n      if (paddingX > cellSize || paddingX < 0) {\n        directionX *= -1;\n        paddingY = paddingY + speed * directionY;\n        d = Math.floor(getRandomArbitrary(40, 60));\n      }\n\n      if (paddingY > cellSize || paddingY < 0) {\n        directionY *= -1;\n        paddingY = paddingY + speed * directionY;\n        d = Math.floor(getRandomArbitrary(40, 60));\n      }\n    },\n\n    display() {\n      let x = xCount * cellSize + paddingX;\n      let y = yCount * cellSize + paddingY;\n\n      if (p.mouseX < width / 2) {\n        p.noStroke();\n        p.fill(255);\n      }\n\n      if (p.mouseX > width / 2) {\n        p.stroke(255);\n        p.strokeWeight(3);\n        p.noFill();\n      }\n\n      if (p.mouseIsPressed) {\n        p.noStroke();\n        p.fill(random(0, 255), random(80, 100), random(200, 255));\n        x = xCount * p.mouseY + paddingX, y = yCount * p.mouseY + paddingY;\n      }\n\n      p.ellipse(x, y, d);\n    }\n\n  };\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const container = document.getElementsByClassName('prototype_4')[0];\n  const frame = document.createElement('div');\n  frame.classList.add('frame');\n  frame.id = 'frame';\n  container.appendChild(frame);\n\n  let sketch = p => {\n    let x = 100;\n    let y = 100;\n\n    p.setup = () => {\n      let canvas = p.createCanvas(800, 800);\n      canvas.parent('frame');\n      let xCellsCount = canvas / cellSize;\n      let yCellsCount = canvas / cellSize;\n      count = xCellsCount * yCellsCount;\n\n      for (let yCount = 0; yCount < yCellsCount; yCount++) {\n        for (let xCount = 0; xCount < xCellsCount; xCount++) {\n          dots.push(createDot({\n            xCount,\n            yCount\n          }));\n        }\n      }\n    };\n\n    p.draw = () => {\n      p.background('#D2C0D4');\n\n      for (let i = 0; i < count; i++) {\n        dots[i].move();\n        dots[i].display();\n      }\n    };\n  };\n\n  let myp5 = new p5(sketch);\n});","map":{"version":3,"sources":["/Users/olesyashevchenko/Documents/github/art/app/javascript/packs/prototype_4.js"],"names":["p5","getRandomArbitrary","min","max","Math","random","dots","count","cellSize","createDot","xCount","yCount","d","floor","speed","paddingX","paddingY","directionX","directionY","move","display","x","y","p","mouseX","width","noStroke","fill","stroke","strokeWeight","noFill","mouseIsPressed","mouseY","ellipse","document","addEventListener","container","getElementsByClassName","frame","createElement","classList","add","id","appendChild","sketch","setup","canvas","createCanvas","parent","xCellsCount","yCellsCount","push","draw","background","i","myp5"],"mappings":"AAAA,OAAOA,EAAP,MAAe,IAAf;;AAEA,SAASC,kBAAT,CAA4BC,GAA5B,EAAiCC,GAAjC,EAAsC;AACpC,SAAOC,IAAI,CAACC,MAAL,MAAiBF,GAAG,GAAGD,GAAvB,IAA8BA,GAArC;AACD;;AACD,IAAII,IAAI,GAAG,EAAX;AACA,IAAIC,KAAJ;AACA,IAAIC,QAAQ,GAAG,GAAf;;AACA,SAASC,SAAT,CAAmB;AACjBC,EAAAA,MADiB;AAEjBC,EAAAA,MAFiB;AAGjBC,EAAAA,CAAC,GAAGR,IAAI,CAACS,KAAL,CAAWZ,kBAAkB,CAAC,EAAD,EAAK,EAAL,CAA7B,CAHa;AAIjBa,EAAAA,KAAK,GAAGV,IAAI,CAACS,KAAL,CAAWZ,kBAAkB,CAAC,CAAD,EAAI,CAAJ,CAA7B;AAJS,CAAnB,EAKG;AACD,MAAIc,QAAQ,GAAGP,QAAQ,GAAG,CAA1B;AACA,MAAIQ,QAAQ,GAAGR,QAAQ,GAAG,CAA1B;AACA,MAAIS,UAAU,GAAG,CAAjB;AACA,MAAIC,UAAU,GAAG,CAAjB;AAEA,SAAO;AACLC,IAAAA,IAAI,GAAG;AACLJ,MAAAA,QAAQ,GAAGA,QAAQ,GAAGD,KAAK,GAAGG,UAA9B;;AACA,UAAIF,QAAQ,GAAGP,QAAX,IAAuBO,QAAQ,GAAG,CAAtC,EAAyC;AACvCE,QAAAA,UAAU,IAAI,CAAC,CAAf;AACAD,QAAAA,QAAQ,GAAGA,QAAQ,GAAGF,KAAK,GAAGI,UAA9B;AACAN,QAAAA,CAAC,GAAGR,IAAI,CAACS,KAAL,CAAWZ,kBAAkB,CAAC,EAAD,EAAK,EAAL,CAA7B,CAAJ;AACD;;AACD,UAAIe,QAAQ,GAAGR,QAAX,IAAuBQ,QAAQ,GAAG,CAAtC,EAAyC;AACvCE,QAAAA,UAAU,IAAI,CAAC,CAAf;AACAF,QAAAA,QAAQ,GAAGA,QAAQ,GAAGF,KAAK,GAAGI,UAA9B;AACAN,QAAAA,CAAC,GAAGR,IAAI,CAACS,KAAL,CAAWZ,kBAAkB,CAAC,EAAD,EAAK,EAAL,CAA7B,CAAJ;AACD;AACF,KAbI;;AAeLmB,IAAAA,OAAO,GAAG;AACR,UAAIC,CAAC,GAAGX,MAAM,GAAGF,QAAT,GAAoBO,QAA5B;AACA,UAAIO,CAAC,GAAGX,MAAM,GAAGH,QAAT,GAAoBQ,QAA5B;;AACA,UAAIO,CAAC,CAACC,MAAF,GAAWC,KAAK,GAAG,CAAvB,EAA0B;AACxBF,QAAAA,CAAC,CAACG,QAAF;AACAH,QAAAA,CAAC,CAACI,IAAF,CAAO,GAAP;AACD;;AACD,UAAIJ,CAAC,CAACC,MAAF,GAAWC,KAAK,GAAG,CAAvB,EAA0B;AACxBF,QAAAA,CAAC,CAACK,MAAF,CAAS,GAAT;AACAL,QAAAA,CAAC,CAACM,YAAF,CAAe,CAAf;AACAN,QAAAA,CAAC,CAACO,MAAF;AACD;;AAED,UAAIP,CAAC,CAACQ,cAAN,EAAsB;AACpBR,QAAAA,CAAC,CAACG,QAAF;AACAH,QAAAA,CAAC,CAACI,IAAF,CAAOtB,MAAM,CAAC,CAAD,EAAI,GAAJ,CAAb,EAAuBA,MAAM,CAAC,EAAD,EAAK,GAAL,CAA7B,EAAwCA,MAAM,CAAC,GAAD,EAAM,GAAN,CAA9C;AACEgB,QAAAA,CAAC,GAAGX,MAAM,GAAGa,CAAC,CAACS,MAAX,GAAoBjB,QAAzB,EAAqCO,CAAC,GAAGX,MAAM,GAAGY,CAAC,CAACS,MAAX,GAAoBhB,QAA7D;AACF;;AAEDO,MAAAA,CAAC,CAACU,OAAF,CAAUZ,CAAV,EAAaC,CAAb,EAAgBV,CAAhB;AACD;;AAnCI,GAAP;AAqCD;;AAEDsB,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,EAA8C,MAAM;AAClD,QAAMC,SAAS,GAAGF,QAAQ,CAACG,sBAAT,CAAgC,aAAhC,EAA+C,CAA/C,CAAlB;AACA,QAAMC,KAAK,GAAGJ,QAAQ,CAACK,aAAT,CAAuB,KAAvB,CAAd;AACAD,EAAAA,KAAK,CAACE,SAAN,CAAgBC,GAAhB,CAAoB,OAApB;AACAH,EAAAA,KAAK,CAACI,EAAN,GAAW,OAAX;AACAN,EAAAA,SAAS,CAACO,WAAV,CAAsBL,KAAtB;;AAEA,MAAIM,MAAM,GAAIrB,CAAD,IAAO;AAClB,QAAIF,CAAC,GAAG,GAAR;AACA,QAAIC,CAAC,GAAG,GAAR;;AAEAC,IAAAA,CAAC,CAACsB,KAAF,GAAU,MAAM;AACd,UAAIC,MAAM,GAAGvB,CAAC,CAACwB,YAAF,CAAe,GAAf,EAAoB,GAApB,CAAb;AACAD,MAAAA,MAAM,CAACE,MAAP,CAAc,OAAd;AAEA,UAAIC,WAAW,GAAGH,MAAM,GAAGtC,QAA3B;AACA,UAAI0C,WAAW,GAAGJ,MAAM,GAAGtC,QAA3B;AACAD,MAAAA,KAAK,GAAG0C,WAAW,GAAGC,WAAtB;;AAEA,WAAK,IAAIvC,MAAM,GAAG,CAAlB,EAAqBA,MAAM,GAAGuC,WAA9B,EAA2CvC,MAAM,EAAjD,EAAqD;AACnD,aAAK,IAAID,MAAM,GAAG,CAAlB,EAAqBA,MAAM,GAAGuC,WAA9B,EAA2CvC,MAAM,EAAjD,EAAqD;AACnDJ,UAAAA,IAAI,CAAC6C,IAAL,CAAU1C,SAAS,CAAC;AAAEC,YAAAA,MAAF;AAAUC,YAAAA;AAAV,WAAD,CAAnB;AACD;AACF;AACF,KAbD;;AAeAY,IAAAA,CAAC,CAAC6B,IAAF,GAAS,MAAM;AACb7B,MAAAA,CAAC,CAAC8B,UAAF,CAAa,SAAb;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG/C,KAApB,EAA2B+C,CAAC,EAA5B,EAAgC;AAC9BhD,QAAAA,IAAI,CAACgD,CAAD,CAAJ,CAAQnC,IAAR;AACAb,QAAAA,IAAI,CAACgD,CAAD,CAAJ,CAAQlC,OAAR;AACD;AACF,KAPD;AAQD,GA3BD;;AA6BA,MAAImC,IAAI,GAAG,IAAIvD,EAAJ,CAAO4C,MAAP,CAAX;AACD,CArCD","sourcesContent":["import p5 from 'p5'\n\nfunction getRandomArbitrary(min, max) {\n  return Math.random() * (max - min) + min\n}\nlet dots = []\nlet count\nlet cellSize = 100\nfunction createDot({\n  xCount,\n  yCount,\n  d = Math.floor(getRandomArbitrary(40, 50)),\n  speed = Math.floor(getRandomArbitrary(1, 3))\n}) {\n  let paddingX = cellSize / 2\n  let paddingY = cellSize / 2\n  let directionX = 1\n  let directionY = 1\n\n  return {\n    move() {\n      paddingX = paddingX + speed * directionX\n      if (paddingX > cellSize || paddingX < 0) {\n        directionX *= -1\n        paddingY = paddingY + speed * directionY\n        d = Math.floor(getRandomArbitrary(40, 60))\n      }\n      if (paddingY > cellSize || paddingY < 0) {\n        directionY *= -1\n        paddingY = paddingY + speed * directionY\n        d = Math.floor(getRandomArbitrary(40, 60))\n      }\n    },\n\n    display() {\n      let x = xCount * cellSize + paddingX\n      let y = yCount * cellSize + paddingY\n      if (p.mouseX < width / 2) {\n        p.noStroke()\n        p.fill(255)\n      }\n      if (p.mouseX > width / 2) {\n        p.stroke(255)\n        p.strokeWeight(3)\n        p.noFill()\n      }\n\n      if (p.mouseIsPressed) {\n        p.noStroke()\n        p.fill(random(0, 255), random(80, 100), random(200, 255))\n        ;(x = xCount * p.mouseY + paddingX), (y = yCount * p.mouseY + paddingY)\n      }\n\n      p.ellipse(x, y, d)\n    }\n  }\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const container = document.getElementsByClassName('prototype_4')[0]\n  const frame = document.createElement('div')\n  frame.classList.add('frame')\n  frame.id = 'frame'\n  container.appendChild(frame)\n\n  let sketch = (p) => {\n    let x = 100\n    let y = 100\n\n    p.setup = () => {\n      let canvas = p.createCanvas(800, 800)\n      canvas.parent('frame')\n\n      let xCellsCount = canvas / cellSize\n      let yCellsCount = canvas / cellSize\n      count = xCellsCount * yCellsCount\n\n      for (let yCount = 0; yCount < yCellsCount; yCount++) {\n        for (let xCount = 0; xCount < xCellsCount; xCount++) {\n          dots.push(createDot({ xCount, yCount }))\n        }\n      }\n    }\n\n    p.draw = () => {\n      p.background('#D2C0D4')\n\n      for (let i = 0; i < count; i++) {\n        dots[i].move()\n        dots[i].display()\n      }\n    }\n  }\n\n  let myp5 = new p5(sketch)\n})\n"]},"metadata":{},"sourceType":"module"}