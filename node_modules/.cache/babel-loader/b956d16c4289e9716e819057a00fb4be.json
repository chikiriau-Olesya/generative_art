{"ast":null,"code":"import p5 from 'p5';\n\nfunction getRandomArbitrary(min, max) {\n  return Math.random() * (max - min) + min;\n}\n\nlet dots = [];\nlet count;\nlet cellSize = 100;\ndocument.addEventListener('DOMContentLoaded', () => {\n  const container = document.getElementsByClassName('prototype_4')[0];\n  const frame = document.createElement('div');\n  frame.classList.add('frame');\n  frame.id = 'frame';\n  container.appendChild(frame);\n\n  let sketch = p => {\n    let x = 100;\n    let y = 100;\n\n    p.setup = () => {\n      let canvas = p.createCanvas(800, 800);\n      canvas.parent('frame');\n      let xCellsCount = canvas / cellSize;\n      let yCellsCount = canvas / cellSize;\n      count = xCellsCount * yCellsCount;\n\n      for (let yCount = 0; yCount < yCellsCount; yCount++) {\n        for (let xCount = 0; xCount < xCellsCount; xCount++) {\n          dots.push(createDot({\n            xCount,\n            yCount\n          }));\n        }\n      }\n    };\n\n    function createDot({\n      xCount,\n      yCount,\n      d = Math.floor(getRandomArbitrary(40, 50)),\n      speed = Math.floor(getRandomArbitrary(1, 3))\n    }) {\n      let paddingX = cellSize / 2;\n      let paddingY = cellSize / 2;\n      let directionX = 1;\n      let directionY = 1;\n      return {\n        move() {\n          paddingX = paddingX + speed * directionX;\n\n          if (paddingX > cellSize || paddingX < 0) {\n            directionX *= -1;\n            paddingY = paddingY + speed * directionY;\n            d = Math.floor(getRandomArbitrary(40, 60));\n          }\n\n          if (paddingY > cellSize || paddingY < 0) {\n            directionY *= -1;\n            paddingY = paddingY + speed * directionY;\n            d = Math.floor(getRandomArbitrary(40, 60));\n          }\n        },\n\n        display() {\n          let x = xCount * cellSize + paddingX;\n          let y = yCount * cellSize + paddingY;\n\n          if (p.mouseX < width / 2) {\n            p.noStroke();\n            p.fill(255);\n          }\n\n          if (p.mouseX > width / 2) {\n            p.stroke(255);\n            p.strokeWeight(3);\n            p.noFill();\n          }\n\n          if (p.mouseIsPressed) {\n            p.noStroke();\n            p.fill(random(0, 255), random(80, 100), random(200, 255));\n            x = xCount * p.mouseY + paddingX, y = yCount * p.mouseY + paddingY;\n          }\n\n          p.ellipse(x, y, d);\n        }\n\n      };\n    }\n\n    p.draw = () => {\n      p.background('#D2C0D4');\n\n      for (let i = 0; i < count; i++) {\n        dots[i].move();\n        dots[i].display();\n      }\n    };\n  };\n\n  let myp5 = new p5(sketch);\n});","map":{"version":3,"sources":["/Users/olesyashevchenko/Documents/github/art/app/javascript/packs/prototype_4.js"],"names":["p5","getRandomArbitrary","min","max","Math","random","dots","count","cellSize","document","addEventListener","container","getElementsByClassName","frame","createElement","classList","add","id","appendChild","sketch","p","x","y","setup","canvas","createCanvas","parent","xCellsCount","yCellsCount","yCount","xCount","push","createDot","d","floor","speed","paddingX","paddingY","directionX","directionY","move","display","mouseX","width","noStroke","fill","stroke","strokeWeight","noFill","mouseIsPressed","mouseY","ellipse","draw","background","i","myp5"],"mappings":"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","sourcesContent":["import p5 from 'p5'\n\nfunction getRandomArbitrary(min, max) {\n  return Math.random() * (max - min) + min\n}\nlet dots = []\nlet count\nlet cellSize = 100\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const container = document.getElementsByClassName('prototype_4')[0]\n  const frame = document.createElement('div')\n  frame.classList.add('frame')\n  frame.id = 'frame'\n  container.appendChild(frame)\n\n  let sketch = (p) => {\n    let x = 100\n    let y = 100\n\n    p.setup = () => {\n      let canvas = p.createCanvas(800, 800)\n      canvas.parent('frame')\n\n      let xCellsCount = canvas / cellSize\n      let yCellsCount = canvas / cellSize\n      count = xCellsCount * yCellsCount\n\n      for (let yCount = 0; yCount < yCellsCount; yCount++) {\n        for (let xCount = 0; xCount < xCellsCount; xCount++) {\n          dots.push(createDot({ xCount, yCount }))\n        }\n      }\n    }\n\n    function createDot({\n      xCount,\n      yCount,\n      d = Math.floor(getRandomArbitrary(40, 50)),\n      speed = Math.floor(getRandomArbitrary(1, 3))\n    }) {\n      let paddingX = cellSize / 2\n      let paddingY = cellSize / 2\n      let directionX = 1\n      let directionY = 1\n\n      return {\n        move() {\n          paddingX = paddingX + speed * directionX\n          if (paddingX > cellSize || paddingX < 0) {\n            directionX *= -1\n            paddingY = paddingY + speed * directionY\n            d = Math.floor(getRandomArbitrary(40, 60))\n          }\n          if (paddingY > cellSize || paddingY < 0) {\n            directionY *= -1\n            paddingY = paddingY + speed * directionY\n            d = Math.floor(getRandomArbitrary(40, 60))\n          }\n        },\n\n        display() {\n          let x = xCount * cellSize + paddingX\n          let y = yCount * cellSize + paddingY\n          if (p.mouseX < width / 2) {\n            p.noStroke()\n            p.fill(255)\n          }\n          if (p.mouseX > width / 2) {\n            p.stroke(255)\n            p.strokeWeight(3)\n            p.noFill()\n          }\n\n          if (p.mouseIsPressed) {\n            p.noStroke()\n            p.fill(random(0, 255), random(80, 100), random(200, 255))\n            ;(x = xCount * p.mouseY + paddingX),\n              (y = yCount * p.mouseY + paddingY)\n          }\n\n          p.ellipse(x, y, d)\n        }\n      }\n    }\n\n    p.draw = () => {\n      p.background('#D2C0D4')\n\n      for (let i = 0; i < count; i++) {\n        dots[i].move()\n        dots[i].display()\n      }\n    }\n  }\n\n  let myp5 = new p5(sketch)\n})\n"]},"metadata":{},"sourceType":"module"}