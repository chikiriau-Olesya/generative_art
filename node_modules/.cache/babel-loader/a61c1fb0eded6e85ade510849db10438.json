{"ast":null,"code":"function submitPost() {\n  const textarea = document.getElementById('comment');\n  const text = textarea.value;\n  const postIdInput = document.getElementById('postId');\n  const postId = postIdInput.value;\n  const data = {\n    comment: {\n      body: text\n    }\n  };\n  fetch(`http://localhost:3000/api/v1/posts/${postId}/comments/create`, {\n    method: 'POST',\n    // or 'PUT'\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  }).then(response => response.json()).then(data => {\n    console.log('Success:', data);\n    const newComment = document.createElement('p');\n    newComment.innerHTML = data.body;\n    postIdInput.before(newComment);\n    textarea.value = '';\n  }).catch(error => {\n    console.error('Error:', error);\n  });\n}\n\nfunction renderEditCommentForm(e) {\n  e.preventDefault();\n  console.log(e.target.previousSibling.previousSibling);\n  const input = document.createElement('input');\n  input.type = 'text';\n  input.value = e.target.previousSibling.previousSibling.innerHTML;\n  e.target.after(input);\n  const submitButton = document.createElement('div');\n  submitButton.innerHTML = 'Update';\n  submitButton.addEventListener('click', updateComment);\n  input.after(submitButton);\n}\n\nfunction updateComment(e) {\n  const commentInput = e.target.previousSibling;\n  const commentId = e.target.previousSibling.previousSibling.dataset.id;\n  const data = {\n    comment: {\n      body: commentInput.value\n    }\n  };\n  fetch(`http://localhost:3000/api/v1/comments/${commentId}`, {\n    method: 'POST',\n    // or 'PUT'\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  }).then(response => response.json()).then(data => {\n    console.log('Success:', data);\n  }).catch(error => {\n    console.error('Error:', error);\n  });\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const submitPostButton = document.getElementById('submitComment');\n  submitPostButton.addEventListener('click', submitPost);\n  const editCommentButtons = document.getElementsByClassName('editCommentButton');\n\n  for (var editCommentButton of editCommentButtons) {\n    editCommentButton.addEventListener('click', renderEditCommentForm);\n  } // GET request\n  // fetch('http://localhost:3000/posts.json')\n  //   .then((response) => response.json())\n  //   .then((data) => console.log(data))\n\n});","map":{"version":3,"sources":["/Users/olesyashevchenko/Documents/github/art/app/javascript/packs/application.js"],"names":["submitPost","textarea","document","getElementById","text","value","postIdInput","postId","data","comment","body","fetch","method","headers","JSON","stringify","then","response","json","console","log","newComment","createElement","innerHTML","before","catch","error","renderEditCommentForm","e","preventDefault","target","previousSibling","input","type","after","submitButton","addEventListener","updateComment","commentInput","commentId","dataset","id","submitPostButton","editCommentButtons","getElementsByClassName","editCommentButton"],"mappings":"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","sourcesContent":["function submitPost() {\n  const textarea = document.getElementById('comment')\n  const text = textarea.value\n  const postIdInput = document.getElementById('postId')\n  const postId = postIdInput.value\n\n  const data = {\n    comment: {\n      body: text\n    }\n  }\n\n  fetch(`http://localhost:3000/api/v1/posts/${postId}/comments/create`, {\n    method: 'POST', // or 'PUT'\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      console.log('Success:', data)\n\n      const newComment = document.createElement('p')\n      newComment.innerHTML = data.body\n      postIdInput.before(newComment)\n      textarea.value = ''\n    })\n    .catch((error) => {\n      console.error('Error:', error)\n    })\n}\n\nfunction renderEditCommentForm(e) {\n  e.preventDefault()\n  console.log(e.target.previousSibling.previousSibling)\n\n  const input = document.createElement('input')\n  input.type = 'text'\n  input.value = e.target.previousSibling.previousSibling.innerHTML\n  e.target.after(input)\n\n  const submitButton = document.createElement('div')\n  submitButton.innerHTML = 'Update'\n  submitButton.addEventListener('click', updateComment)\n\n  input.after(submitButton)\n}\n\nfunction updateComment(e) {\n  const commentInput = e.target.previousSibling\n  const commentId = e.target.previousSibling.previousSibling.dataset.id\n\n  const data = {\n    comment: {\n      body: commentInput.value\n    }\n  }\n\n  fetch(`http://localhost:3000/api/v1/comments/${commentId}`, {\n    method: 'POST', // or 'PUT'\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      console.log('Success:', data)\n    })\n    .catch((error) => {\n      console.error('Error:', error)\n    })\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const submitPostButton = document.getElementById('submitComment')\n  submitPostButton.addEventListener('click', submitPost)\n\n  const editCommentButtons = document.getElementsByClassName(\n    'editCommentButton'\n  )\n\n  for (var editCommentButton of editCommentButtons) {\n    editCommentButton.addEventListener('click', renderEditCommentForm)\n  }\n\n  // GET request\n  // fetch('http://localhost:3000/posts.json')\n  //   .then((response) => response.json())\n  //   .then((data) => console.log(data))\n})\n"]},"metadata":{},"sourceType":"module"}